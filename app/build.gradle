apply plugin: 'com.android.application'
apply plugin: 'org.ajoberstar.grgit'

android {
    compileSdk 33

    defaultConfig {
        applicationId "ai.elimu.content_provider"
        minSdkVersion 24
        targetSdkVersion 33
        versionCode 1002012
        versionName "1.2.12-SNAPSHOT"
        setProperty("archivesBaseName", "${applicationId}-${versionCode}")
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "${projectDir}/schemas".toString()]
            }
        }
    }
    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
        }
        qa_test {
            initWith debug
            applicationIdSuffix ".test"
            versionNameSuffix "-test"
        }
        release {
            minifyEnabled false
        }
    }
    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'com.github.elimu-ai:model:model-2.0.62' // See https://jitpack.io/#elimu-ai/model

    implementation 'commons-io:commons-io:2.11.0'
    implementation 'com.google.android.material:material:1.5.0'

    // AndroidX
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.navigation:navigation-fragment:2.4.2'
    implementation 'androidx.navigation:navigation-ui:2.4.2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    // Retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Room components
    implementation "androidx.room:room-runtime:2.4.2"
    annotationProcessor "androidx.room:room-compiler:2.4.2"
    androidTestImplementation "androidx.room:room-testing:2.4.2"

    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}

task ensureCleanRepo {
    doLast {
        if (!grgit.repository.jgit.status().call().clean) {
            throw new GradleException('Git status is not clean, please stash your changes!')
        }
    }
}

task releaseClean(dependsOn: ensureCleanRepo) {
    doLast {
        def clean = true
        def applicationId = android.defaultConfig.applicationId

        String headCommitMessage = grgit.head().shortMessage
        while (headCommitMessage.contains("[gradle-release-task]")) {
            clean = false
            println "Found git commit: $headCommitMessage"
            if (headCommitMessage.indexOf("$applicationId-") > -1) {
                def tagName = headCommitMessage.split("$applicationId-")[1]
                println "Removing the git tag: $tagName"
                try {
                    grgit.tag.remove {
                        names = [tagName]
                    }
                } catch (Exception e) {
                    println "Error while removing git tag:\n $e"
                }
            }
            println "Resetting the git commit permanently!"
            grgit.reset(commit: "HEAD~1", mode: "hard")
            headCommitMessage = grgit.head().shortMessage

        }
        if (clean){
            println "Repository is already clean"
        }
        println "Done!"
    }
}
